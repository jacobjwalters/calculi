@article{gundry2013TutorialImplementationDynamic,
  title = {A Tutorial Implementation of Dynamic Pattern Unification},
  author = {Gundry, Adam and McBride, Conor},
  date = {2013},
  abstract = {A higher-order unification algorithm is an essential component of a dependently typed programming language implementation, and understanding its capabilities is important if dependently typed programmers are to become productive. Miller showed that, for simply typed λ-terms in the pattern fragment (where metavariables are applied to spines of distinct bound variables), unification is decidable and most general unifiers exist. We describe an algorithm for pattern unification in a full-spectrum dependent type theory with dependent pairs (Σ-types). The algorithm exploits heterogeneous equality and a novel concept of ‘twin’ free variables to handle dependency. Moreover, it supports dynamic management of constraints, postponing equations that fall outside the pattern fragment in case other equations make them simpler. We aim to make sense both to language implementors and users, and to this end present our algorithm as a Haskell program.},
  langid = {english},
  file = {zotero://open-pdf/library/items/DK5GLZ4I?Gundry and McBride - A tutorial implementation of dynamic pattern unification.pdf}
}

@online{gundry2013TypeInferenceHaskell,
  title = {Type Inference, {{Haskell}} and Dependent Types},
  author = {Gundry, Adam Michael},
  date = {2013},
  file = {zotero://open-pdf/library/items/4MBY9BIP?Gundry - 2013 - Type inference, Haskell and dependent types.pdf;/Users/s2026618/Documents/zotero/storage/JSF3CRWU/fq977t858.html}
}
